# rebot
Rebot runs on the nagios server b/c it can access baselist.pl without authentication. It is also whitelisted for DRAC commands.

First, ask Nagios if there are any reboot candidates.
	If nagios says it's fine, do nothing.
	If nagios says both ssh and sshalt are down on a server, then consider for reboot. It uses baselist.pl somehow.
		Should a candidate be rebooted?
			Is the switch accessible via ssh?
				Yes? Move on to the next challenge.
				No? Don't reboot
					# Do we alert or log this? It's helpful to know if a site is down and track it over time
			Has it been at least 24 hours since it was rebooted? (Is there a state file for the node and is the reboot timestamp more than 24 hours?)
				Yes? Move on to the next challenge. 
				No? Don't reboot, just log.
			Have more than 5 crashed machines been detected during this run?
				Yes? Don't reboot, alert a human because something is wrong.
				No? Reboot and log.

Then take the reboot candidate and do that thing.
	Take the short hostname and ask PLC for the DRAC login.	
		# Alternately, dump the DRAC database once a day and draw from that in case PLC is down
	Issue a racadm serveraction powercycle
	Log to a local file and a shared spreadsheet:
		Timestamp of the machine from which the script is running (or UTC) 
		Short hostname
		The challenge responses from above
		Timestamp when ssh succeeds again (from Nagios?)
	Write local state file:
		cd /tmp/reboot
			{ 
				“reboot”: <timestamp>,
				“recovery”: <timestamp>,
			}


Design questions:

In the decision tree, is it better to do, erm, would it be called a waterfall decision, where succeeding at step a moves you to step b, otherwise exits? Or better actually to answer and log all three questions, then calculate whether there's quorum?
